{"version":3,"file":"router_link_active.js","sourceRoot":"","sources":["../../../../../modules/@angular/router/src/directives/router_link_active.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AfterContentInit, ContentChildren, Directive, ElementRef, Input, OnChanges, OnDestroy, QueryList, Renderer} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {NavigationEnd, Router} from '../router';\nimport {containsTree} from '../url_tree';\n\nimport {RouterLink} from './router_link';\n\ninterface RouterLinkActiveOptions {\n  exact: boolean;\n}\nexport class RouterLinkActive implements OnChanges, OnDestroy, AfterContentInit { private links: QueryList<RouterLink>;\n  private classes: string[] = [];\n  private subscription: Subscription; private routerLinkActiveOptions: RouterLinkActiveOptions = {exact: false};\n\n  /**\n   * @internal\n   */\n  constructor(private router: Router, private element: ElementRef, private renderer: Renderer) {\n    this.subscription = router.events.subscribe(s => {\n      if (s instanceof NavigationEnd) {\n        this.update();\n      }\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.links.changes.subscribe(s => this.update());\n    this.update();\n  }\n  set routerLinkActive(data: string[]|string) {\n    if (Array.isArray(data)) {\n      this.classes = <any>data;\n    } else {\n      this.classes = data.split(' ');\n    }\n  }\n\n  ngOnChanges(changes: {}): any { this.update(); }\n  ngOnDestroy(): any { this.subscription.unsubscribe(); }\n\n  private update(): void {\n    if (!this.links || this.links.length === 0) return;\n\n    const currentUrlTree = this.router.parseUrl(this.router.url);\n    const isActive = this.links.reduce(\n        (res, link) =>\n            res || containsTree(currentUrlTree, link.urlTree, this.routerLinkActiveOptions.exact),\n        false);\n\n    this.classes.forEach(\n        c => this.renderer.setElementClass(this.element.nativeElement, c, isActive));\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[routerLinkActive]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Router, },\n{type: ElementRef, },\n{type: Renderer, },\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'links': [{ type: ContentChildren, args: [RouterLink, ] },],\n'routerLinkActiveOptions': [{ type: Input },],\n'routerLinkActive': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}