{"version":3,"file":"router_link_active.js","sourceRoot":"","sources":["../../../../../../modules/@angular/router/src/directives/router_link_active.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AfterContentInit, ContentChildren, Directive, ElementRef, Input, OnChanges, OnDestroy, QueryList, Renderer} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {NavigationEnd, Router} from '../router';\nimport {containsTree} from '../url_tree';\n\nimport {RouterLink} from './router_link';\n\ninterface RouterLinkActiveOptions {\n  exact: boolean;\n}\nexport class RouterLinkActive implements OnChanges, OnDestroy, AfterContentInit { private links: QueryList<RouterLink>;\n  private classes: string[] = [];\n  private subscription: Subscription; private routerLinkActiveOptions: RouterLinkActiveOptions = {exact: false};\n\n  /**\n   * @internal\n   */\n  constructor(private router: Router, private element: ElementRef, private renderer: Renderer) {\n    this.subscription = router.events.subscribe(s => {\n      if (s instanceof NavigationEnd) {\n        this.update();\n      }\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.links.changes.subscribe(s => this.update());\n    this.update();\n  }\n  set routerLinkActive(data: string[]|string) {\n    if (Array.isArray(data)) {\n      this.classes = <any>data;\n    } else {\n      this.classes = data.split(' ');\n    }\n  }\n\n  ngOnChanges(changes: {}): any { this.update(); }\n  ngOnDestroy(): any { this.subscription.unsubscribe(); }\n\n  private update(): void {\n    if (!this.links || this.links.length === 0) return;\n\n    const currentUrlTree = this.router.parseUrl(this.router.url);\n    const isActive = this.links.reduce(\n        (res, link) =>\n            res || containsTree(currentUrlTree, link.urlTree, this.routerLinkActiveOptions.exact),\n        false);\n\n    this.classes.forEach(\n        c => this.renderer.setElementClass(this.element.nativeElement, c, isActive));\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[routerLinkActive]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Router, },\n{type: ElementRef, },\n{type: Renderer, },\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'links': [{ type: ContentChildren, args: [RouterLink, ] },],\n'routerLinkActiveOptions': [{ type: Input },],\n'routerLinkActive': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}