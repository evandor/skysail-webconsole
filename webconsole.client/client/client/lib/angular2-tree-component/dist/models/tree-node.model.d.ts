import { ElementRef } from '@angular/core';
import { TreeModel } from './tree.model';
import { TreeOptions } from './tree-options.model';
import { ITreeNode } from '../defs/api';
export declare class TreeNode implements ITreeNode {
    data: any;
    parent: TreeNode;
    treeModel: TreeModel;
    isExpanded: boolean;
    isActive: boolean;
    isFocused: boolean;
    level: number;
    path: string[];
    elementRef: ElementRef;
    children: TreeNode[];
    private _originalNode;
    originalNode: any;
    constructor(data: any, parent: TreeNode, treeModel: TreeModel);
    hasChildren: boolean;
    isCollapsed: boolean;
    isLeaf: boolean;
    isRoot: boolean;
    realParent: TreeNode;
    options: TreeOptions;
    fireEvent(event: any): void;
    context: any;
    displayField: any;
    id: any;
    getField(key: any): any;
    setField(key: any, value: any): void;
    findAdjacentSibling(steps: any): any;
    findNextSibling(): any;
    findPreviousSibling(): any;
    getFirstChild(): TreeNode;
    getLastChild(): TreeNode;
    findNextNode(goInside?: boolean): any;
    findPreviousNode(): any;
    _getLastOpenDescendant(): any;
    private _getParentsChildren();
    private _getIndexInParent();
    loadChildren(): void;
    _setIsExpanded(value: any): void;
    toggle(): void;
    expand(): void;
    collapse(): void;
    toggleExpanded(): void;
    setIsExpanded(value: any): void;
    setIsActive(value: any, multi?: boolean): void;
    toggleActivated(multi?: boolean): void;
    scrollIntoView(): void;
    focus(): void;
    blur(): void;
    doubleClick(rawEvent: MouseEvent): void;
    mouseAction(actionName: string, $event: any): void;
    _initChildren(): void;
}
