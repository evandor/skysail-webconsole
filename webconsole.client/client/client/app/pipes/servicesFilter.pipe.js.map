{"version":3,"sources":["app/pipes/servicesFilter.pipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAQA;gBAEI,wBAAoB,WAAuB;oBAAvB,gBAAW,GAAX,WAAW,CAAY;gBAAI,CAAC;gBAEhD,kCAAS,GAAT,UAAU,QAAmB,EAAE,IAAW;oBACtC,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;wBACnB,uCAAuC;wBACvC,MAAM,CAAC,iBAAO,CAAC,CAAC,CAAC,CAAC;oBACtB,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC;wBAChC,qDAAqD;wBACrD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,IAAI,EAAJ,CAAI,CAAC,CAAC;oBAC3C,CAAC;oBACD,IAAI,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAnD,CAAmD,CAAC,CAAC;oBACxG,6DAA6D;oBAE5D,IAAI,OAAO,GAAa,EAAE,CAAC;oBAC3B,gBAAgB,CAAC,OAAO,CAAC,UAAA,MAAM;wBAC3B,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAAC;oBACH,4CAA4C;oBAE5C,MAAM,CAAC,gBAAgB,CAAC;gBAC5B,CAAC;gBA3BL;oBAAC,WAAI,CAAC;wBACF,IAAI,EAAE,gBAAgB;qBACzB,CAAC;oBACD,iBAAU,EAAE;;kCAAA;gBAyBb,qBAAC;YAAD,CAxBA,AAwBC,IAAA;YAxBD,2CAwBC,CAAA","file":"app/pipes/servicesFilter.pipe.js","sourcesContent":["import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\nimport {Service} from '../domain/service';\r\nimport {AppGlobals} from '../services/appglobals.service';\r\n\r\n@Pipe({\r\n    name: 'servicesFilter'\r\n})\r\n@Injectable()\r\nexport class ServicesFilter implements PipeTransform {\r\n\r\n    constructor(private _appGlobals: AppGlobals) { }\r\n\r\n    transform(services: Service[], args: any[]): any {\r\n        if (services == null) {\r\n            //this._appGlobals.setFilteredCount(0);\r\n            return Service[0];\r\n        }\r\n        if (typeof args[0] == 'undefined') {\r\n            //this._appGlobals.setFilteredCount(services.length);\r\n            return services.filter(bundle => true);\r\n        }\r\n        var filteredServices = services.filter(service => service.objectClass.indexOf(args.toString()) !== -1);\r\n       // this._appGlobals.setFilteredCount(filteredBundles.length);\r\n\r\n        var theList: string[] = [];\r\n        filteredServices.forEach(bundle => {\r\n            theList.push(bundle.id);\r\n        });\r\n        //this._appGlobals.setBundleIdList(theList);\r\n\r\n        return filteredServices;\r\n    }\r\n}"],"sourceRoot":"/source/"}