{"version":3,"sources":["app/pipes/bundleState.pipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAQA;gBAAA;gBAoBA,CAAC;gBAnBG,mCAAS,GAAT,UAAU,WAAmB;oBACzB,EAAE,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC,kBAAkB,CAAC;oBAC9B,CAAC;oBACD,MAAM,CAAC,eAAe,GAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAC,IAAI,GAAG,WAAW,GAAG,SAAS,CAAC;gBAC1F,CAAC;gBAED,uCAAa,GAAb,UAAc,KAAa;oBACvB,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACZ,KAAK,QAAQ;4BACT,MAAM,CAAC,qBAAqB,CAAC;wBACjC,KAAK,WAAW;4BACZ,MAAM,CAAC,qBAAqB,CAAC;wBACjC;4BACI,MAAM,CAAC,oBAAoB,CAAC;oBACpC,CAAC;gBACL,CAAC;gBArBL;oBAAC,WAAI,CAAC;wBACF,IAAI,EAAE,aAAa;qBACtB,CAAC;oBACD,iBAAU,EAAE;;mCAAA;gBAqBb,sBAAC;YAAD,CApBA,AAoBC,IAAA;YApBD,6CAoBC,CAAA","file":"app/pipes/bundleState.pipe.js","sourcesContent":["import {Injectable, Pipe, PipeTransform} from '@angular/core';\n\nimport {Bundle} from '../domain/bundle';\n\n@Pipe({\n    name: 'bundleState'\n})\n@Injectable()\nexport class BundleStatePipe implements PipeTransform {\n    transform(bundleState: string): any {\n        if (bundleState == null) {\n            return \"<span>***</span>\";\n        }\n        return \"<span class='\"+this.getStateClass(bundleState)+\"'>\" + bundleState + \"</span>\";\n    }\n\n    getStateClass(state: string) {\n        switch (state) {\n            case \"ACTIVE\":\n                return \"label label-success\";\n            case \"INSTALLED\":\n                return \"label label-warning\";\n            default:\n                return \"label label-danger\";\n        }\n    }\n\n\n}"],"sourceRoot":"/source/"}