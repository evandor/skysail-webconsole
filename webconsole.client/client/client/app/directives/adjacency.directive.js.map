{"version":3,"sources":["app/directives/adjacency.directive.ts"],"names":[],"mappings":"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","file":"app/directives/adjacency.directive.js","sourcesContent":["import {Component, Directive, ElementRef, Input, OnInit} from '@angular/core'\n\nimport {BackendServices} from '../services/backend.service';\n\nimport {Node} from '../domain/node';\nimport {Edge} from '../domain/edge';\n\nimport * as d3 from 'd3';\n\n@Directive({\n    selector: \"[adjacency]\"\n})\nexport class AdjacencyDirective implements OnInit {\n\n    edges = Array<Edge>();\n    \n    rNodes = Array<Node>(); // requirererNodes\n    pNodes = Array<Node>(); // providerNodes\n\n    constructor(private _el: ElementRef, private _backend: BackendServices) { }\n\n    render() {\n        var edgeHash = {};\n        for (var x in this.edges) {\n            var id = this.edges[x].source + \"-\" + this.edges[x].target;\n            edgeHash[id] = this.edges[x];\n        };\n        var matrix = [];\n        for (var a in this.pNodes) {\n            for (var b in this.rNodes) {\n                var grid =\n                    {\n                        id: this.pNodes[a].id + \"-\" + this.rNodes[b].id,\n                        x: b, y: a, weight: 0\n                    };\n                if (edgeHash[grid.id]) {\n                    grid.weight = edgeHash[grid.id].weight;\n                };\n                matrix.push(grid);\n            };\n        };\n        d3.select(\"svg\")\n            .append(\"g\")\n            .attr(\"transform\", \"translate(50,50)\")\n            .attr(\"id\", \"adjacencyG\")\n            .selectAll(\"rect\")\n            .data(matrix)\n            .enter()\n            .append(\"rect\")\n            .attr(\"class\", \"grid\")\n            .attr(\"width\", 25)\n            .attr(\"height\", 25)\n            .attr(\"x\", function (d) { return d.x * 25 })\n            .attr(\"y\", function (d) { return d.y * 25 })\n            .style(\"fill-opacity\", function (d) { return d.weight * .2; })\n        var scaleSize = this.pNodes.length * 25;\n        var pNameScale = d3.scale.ordinal()\n            .domain(this.pNodes.map(function (el) { return el.id }))\n            .rangePoints([0, scaleSize], 1);\n        var rNameScale = d3.scale.ordinal()\n            .domain(this.rNodes.map(function (el) { return el.id }))\n            .rangePoints([0, scaleSize], 1);\n        var xAxis = d3.svg.axis()\n            .scale(rNameScale).orient(\"top\").tickSize(4);\n        var yAxis = d3.svg.axis()\n            .scale(pNameScale).orient(\"left\").tickSize(4);\n        d3.select(\"#adjacencyG\").append(\"g\").call(yAxis);\n        d3.select(\"#adjacencyG\").append(\"g\").call(xAxis)\n            .selectAll(\"text\")\n\n        d3.selectAll(\"rect.grid\").on(\"mouseover\", gridOver);\n        function gridOver(d, i) {\n            d3.selectAll(\"rect\").style(\"stroke-width\", function (p) {\n                return p.x == d.x || p.y == d.y ? \"3px\" : \"1px\"\n            });\n        };\n\n    }\n\n    ngOnInit() {\n\n        this._backend.getLatestSnapshot()\n            .subscribe(snapshot => {\n                var allNodes = Array<Node>();\n                snapshot.bundles.forEach(bundle => {\n                    if (bundle.id == \"0\") {\n                        return;\n                    }\n                    allNodes.push(new Node(bundle.id, bundle.symbolicName, 17, 500));\n                    var toCounter = new Map<string, number>();\n                    bundle.wireDescriptor.providedWires.forEach(wire => {\n                        var requirerId = wire.rid;\n                        if (toCounter.has(requirerId)) {\n                            var old = toCounter.get(requirerId);\n                            toCounter.set(requirerId, old + 1);\n                        } else {\n                            toCounter.set(requirerId, 1);\n                        }\n                        toCounter.forEach((value, index, map) => {\n                            if (index != \"0\") {\n                               // console.log(bundle.id + \": \" + index + \"/\" + value);\n                                this.edges.push(new Edge(bundle.id, index, value));\n                            }\n                        });\n                    });\n                })\n                allNodes.forEach(node => {\n                    if (this.getEdgeCount(node) > 0) {\n                       // this.nodes.push(node);\n                    }\n                    if (this.hasRequirements(node)) {\n                        this.rNodes.push(node);\n                    }\n                    if (this.hasCapabilities(node)) {\n                        this.pNodes.push(node);\n                    }\n                })\n                this.render();\n            });\n    }\n    \n    hasRequirements(node: Node): boolean {\n        for (var e of this.edges) {\n            if (e.target == node.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n     hasCapabilities(node: Node): boolean {\n        for (var e of this.edges) {\n            if (e.source == node.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getEdgeCount(node: Node): number {\n        for (var e of this.edges) {\n            if (e.target == node.id) {\n                return 1;\n            }\n        }\n        return 1;\n    }\n\n\n}"],"sourceRoot":"/source/"}