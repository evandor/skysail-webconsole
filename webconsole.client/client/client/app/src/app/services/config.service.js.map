{"version":3,"sources":["app/services/config.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAKA;gBAKI,uBAAoB,OAAqB,EAAU,IAAS;oBALhE,iBAeC;oBAVuB,YAAO,GAAP,OAAO,CAAc;oBAAU,SAAI,GAAJ,IAAI,CAAK;oBACxD,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC;yBAClB,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;yBACtB,SAAS,CAAC,UAAC,MAAU;wBAClB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;wBACxB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;oBAC5B,CAAC,CAAC,CAAA;gBACV,CAAC;gBAbL;oBAAC,iBAAU,EAAE;;iCAAA;gBAgBb,oBAAC;YAAD,CAfA,AAeC,IAAA;YAfD,yCAeC,CAAA","file":"src/app/services/config.service.js","sourcesContent":["import {Injectable, EventEmitter} from \"@angular/core\";\nimport {WindowService} from './window.service';\nimport {Http, Headers} from '@angular/http'\n\n@Injectable()\nexport class ConfigService {\n\n    host:string;\n    port:string;\n\n    constructor(private windows:WindowService, private http:Http) {\n        http.get('config.json')\n            .map(res => res.json())\n            .subscribe((config:any) => {\n                this.host = config.host;\n                this.port = config.port;\n            })\n    }\n\n\n}\n\n"],"sourceRoot":"/source/"}