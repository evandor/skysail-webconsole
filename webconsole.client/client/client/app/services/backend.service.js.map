{"version":3,"sources":["app/services/backend.service.ts"],"names":[],"mappings":"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","file":"app/services/backend.service.js","sourcesContent":["import {Injectable, OnInit} from '@angular/core'\r\nimport {Http, Headers, RequestOptions} from '@angular/http'\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport {Bundle} from '../domain/bundle';\r\nimport {ExportPackage} from '../domain/exportPackage';\r\nimport {LogEntry} from '../domain/logEntry';\r\nimport {Service} from '../domain/service';\r\nimport {Snapshot} from '../domain/snapshot';\r\n\r\nimport {ConfigService} from '../services/config.service';\r\nimport {AppGlobals} from '../services/appglobals.service';\r\n\r\n\r\n@Injectable()\r\nexport class BackendServices {\r\n\r\n    private _baseUrl = '';\r\n\r\n    constructor(private _http: Http, private _appGlobals: AppGlobals) {\r\n        console.log(\"BackendServices constructor\");\r\n        _appGlobals._backendUrl.subscribe(value => this._baseUrl = value);\r\n        console.log(\"base url set to '\" + this._baseUrl + \"'\");\r\n    }\r\n\r\n    get(path) {\r\n        var headers = new Headers();\r\n        //headers.append('Authorization', 'Basic YWRtaW46c2t5c2FpbA==');\r\n        return this._http.get(this._baseUrl + path, { headers: headers })\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getFramework(): Observable<any> {\r\n        return this._http.get(this._baseUrl + 'backend/framework')\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getBundles(): Observable<Bundle[]> {\r\n        return this._http.get(this._baseUrl + 'backend/bundles')\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getBundle(id): Observable<Bundle> {\r\n        return this._http.get(this._baseUrl + 'backend/bundles/' + id)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getBundleServices(id): Observable<Service[]> {\r\n        return this._http.get(this._baseUrl + 'backend/bundles/' + id + \"/services\")\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getServices(): Observable<Service[]> {\r\n        return this._http.get(this._baseUrl + 'backend/services')\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getService(id): Observable<Service> {\r\n        return this._http.get(this._baseUrl + 'backend/services/' + id)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getPackages(): Observable<ExportPackage[]> {\r\n        return this._http.get(this._baseUrl + 'backend/packages')\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getLogs(): Observable<LogEntry[]> {\r\n        return this._http.get(this._baseUrl + 'backend/logs')\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getSnapshots(): Observable<Snapshot[]> {\r\n        return this._http.get(this._baseUrl + 'backend/snapshots')\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getLatestSnapshot(): Observable<Snapshot> {\r\n        return this._http.get(this._baseUrl + 'backend/snapshotdetails/latest')\r\n            .map(res => res.json());\r\n    }\r\n\r\n    createSnapshot() {\r\n        return this._http.post(this._baseUrl + 'backend/snapshots/', JSON.stringify(\"create\"))\r\n            //.map(res => res.json())\r\n            ;\r\n    }\r\n\r\n    getVersion() {\r\n        return this._http.get(this._baseUrl + 'client/version')\r\n            .map(res => res.text());\r\n    }\r\n}"],"sourceRoot":"/source/"}