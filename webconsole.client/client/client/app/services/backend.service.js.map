{"version":3,"sources":["app/services/backend.service.ts"],"names":[],"mappings":"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","file":"app/services/backend.service.js","sourcesContent":["import {Injectable, OnInit} from '@angular/core'\nimport {Http, Headers, RequestOptions} from '@angular/http'\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\nimport {Bundle} from '../domain/bundle';\nimport {ExportPackage} from '../domain/exportPackage';\nimport {LogEntry} from '../domain/logEntry';\nimport {Service} from '../domain/service';\nimport {Snapshot} from '../domain/snapshot';\n\nimport {ConfigService} from '../services/config.service';\nimport {AppGlobals} from '../services/appglobals.service';\n\n\n@Injectable()\nexport class BackendServices {\n\n    private _baseUrl = '';\n\n    constructor(private _http: Http, private _appGlobals: AppGlobals) {\n        console.log(\"BackendServices constructor\");\n        _appGlobals._backendUrl.subscribe(value => this._baseUrl = value);\n        console.log(\"base url set to '\" + this._baseUrl + \"'\");\n        if (this._baseUrl == \"http://undefined:undefined/\") {\n            this._baseUrl = \"http://localhost:2002/\";\n            console.log(\"base url undefined, setting back to default \" + this._baseUrl);\n        }\n    }\n\n    get(path) {\n        var headers = new Headers();\n        //headers.append('Authorization', 'Basic YWRtaW46c2t5c2FpbA==');\n        return this._http.get(this._baseUrl + path, { headers: headers })\n            .map(res => res.json());\n    }\n\n    getFramework(): Observable<any> {\n        return this._http.get(this._baseUrl + 'backend/v1/framework')\n            .map(res => res.json());\n    }\n\n    getBundles(): Observable<Bundle[]> {\n        return this._http.get(this._baseUrl + 'backend/v1/bundles')\n            .map(res => res.json());\n    }\n\n    getBundle(id): Observable<Bundle> {\n        return this._http.get(this._baseUrl + 'backend/v1/bundles/' + id)\n            .map(res => res.json());\n    }\n\n    getBundleServices(id): Observable<Service[]> {\n        return this._http.get(this._baseUrl + 'backend/v1/bundles/' + id + \"/services\")\n            .map(res => res.json());\n    }\n\n    getBundleContents(id): Observable<Bundle> {\n        return this._http.get(this._baseUrl + 'backend/v1/bundles/' + id + \"/contents\")\n            .map(res => res.json());\n    }\n\n    getBundleFileContents(id: string, filename: string): Observable<string> {\n        return this._http.get(this._baseUrl + 'backend/v1/bundles/' + id + \"/contents/\" + filename)\n            .map(res => res.json());\n    }\n\n    getServices(): Observable<Service[]> {\n        return this._http.get(this._baseUrl + 'backend/v1/services')\n            .map(res => res.json());\n    }\n\n    getService(id): Observable<Service> {\n        return this._http.get(this._baseUrl + 'backend/v1/services/' + id)\n            .map(res => res.json());\n    }\n\n    getPackages(): Observable<ExportPackage[]> {\n        return this._http.get(this._baseUrl + 'backend/v1/packages')\n            .map(res => res.json());\n    }\n\n    getLogs(): Observable<LogEntry[]> {\n        return this._http.get(this._baseUrl + 'backend/v1/logs')\n            .map(res => res.json());\n    }\n\n    getSnapshots(): Observable<Snapshot[]> {\n        return this._http.get(this._baseUrl + 'backend/v1/snapshots')\n            .map(res => res.json());\n    }\n\n    getLatestSnapshot(): Observable<Snapshot> {\n        return this._http.get(this._baseUrl + 'backend/v1/snapshotdetails/latest')\n            .map(res => res.json());\n    }\n\n    createSnapshot() {\n        return this._http.post(this._baseUrl + 'backend/v1/snapshots/', JSON.stringify(\"create\"))\n            //.map(res => res.json())\n            ;\n    }\n\n    getVersion() {\n        return this._http.get(this._baseUrl + 'backend/v1/client/version')\n            .map(res => res.text());\n    }\n}"],"sourceRoot":"/source/"}