{"version":3,"sources":["app/components/graph.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAEA,qCAAqC;YACrC,iCAAiC;YAUjC;gBAII,kBACY,UAAsB,EACV,KAAa,EACZ,MAAc;oBAF3B,eAAU,GAAV,UAAU,CAAY;oBAI/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACnB,IAAI,EAAE,GAAQ,UAAU,CAAC,aAAa,CAAC;oBACvC,iDAAiD;oBAElD;;;;;;;;;;4CAUwB;gBAC3B,CAAC;gBAED,yBAAM,GAAN,UAAO,QAAQ;oBACX,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;wBAAC,MAAM,CAAC;oBAEtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;yBACzC,UAAU,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;yBAC5B,KAAK,CAAC,OAAO,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,GAAG,GAAG,EAAP,CAAO,CAAC;yBAC5B,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,GAAG,GAAG,EAAP,CAAO,CAAC,CAAC;gBAE5B,CAAC;gBAED,2BAAQ,GAAR;oBACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3B,CAAC;gBA9CL;oBAJ2E,WAAW;oBAIrF,gBAAS,CAAC;wBACP,QAAQ,EAAE,UAAU;wBACpB,2BAA2B;wBAC3B,IAAI,EAAE;4BACF,UAAU,EAAE,YAAY;yBAC3B;wBACD,UAAU,EAAE,CAAC,MAAM,CAAC;qBACvB,CAAC;+BAOO,gBAAS,CAAC,OAAO,CAAC;+BAClB,gBAAS,CAAC,QAAQ,CAAC;;4BAR1B;gBAwCF,eAAC;YAAD,CAvCA,AAuCC,IAAA;YAvCD,+BAuCC,CAAA","file":"src/app/components/graph.component.js","sourcesContent":["import {OnInit} from '@angular/core';\nimport {Component, Directive, Attribute, ElementRef} from '@angular/core'; // onChange\n//import {Inject} from 'angular2/di';\n//import * as d3 from 'd3/index';\n\n@Directive({\n    selector: 'barGraph',\n    //lifecycle:  [ OnChange ],\n    host: {\n        '(change)': 'onChange()'\n    },\n    properties: ['data']\n})\nexport class BarGraph {\n    data: Array<number>;\n    divs: any;\n    \n    constructor(\n        private elementRef: ElementRef,\n        @Attribute('width') width: string,\n        @Attribute('height') height: string) {\n\n       console.log(\"hier\");\n        var el: any = elementRef.nativeElement;\n        //this.elementRef.nativeElement.find('#example');\n        \n       /*var graph: any = d3.select(el);\n       this.divs = graph.\n            append('div').\n            attr({\n                'class': 'chart'\n            }).\n            style({\n                'width': width + 'px',\n                'height': height + 'px',\n            }).\n            selectAll('div');*/\n    }\n\n    render(newValue) {\n        if (!newValue) return;\n\n        this.divs.data(newValue).enter().append('div')\n            .transition().ease('elastic')\n            .style('width', d => d + '%')\n            .text(d => d + '%');\n\n    }\n\n    onChange() {\n        this.render(this.data);\n    }\n}\n"],"sourceRoot":"/source/"}