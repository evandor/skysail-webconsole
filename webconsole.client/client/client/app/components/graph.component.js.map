{"version":3,"sources":["app/components/graph.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAEA,qCAAqC;YACrC,iCAAiC;YAUjC;gBAII,kBACY,UAAsB,EACV,KAAa,EACZ,MAAc;oBAF3B,eAAU,GAAV,UAAU,CAAY;oBAI/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACnB,IAAI,EAAE,GAAQ,UAAU,CAAC,aAAa,CAAC;oBACvC,iDAAiD;oBAElD;;;;;;;;;;4CAUwB;gBAC3B,CAAC;gBAED,yBAAM,GAAN,UAAO,QAAQ;oBACX,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;wBAAC,MAAM,CAAC;oBAEtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;yBACzC,UAAU,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;yBAC5B,KAAK,CAAC,OAAO,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,GAAG,GAAG,EAAP,CAAO,CAAC;yBAC5B,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,GAAG,GAAG,EAAP,CAAO,CAAC,CAAC;gBAE5B,CAAC;gBAED,2BAAQ,GAAR;oBACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3B,CAAC;gBA9CL;oBAJ2E,WAAW;oBAIrF,gBAAS,CAAC;wBACP,QAAQ,EAAE,UAAU;wBACpB,2BAA2B;wBAC3B,IAAI,EAAE;4BACF,UAAU,EAAE,YAAY;yBAC3B;wBACD,UAAU,EAAE,CAAC,MAAM,CAAC;qBACvB,CAAC;+BAOO,gBAAS,CAAC,OAAO,CAAC;+BAClB,gBAAS,CAAC,QAAQ,CAAC;;4BAR1B;gBAwCF,eAAC;YAAD,CAvCA,AAuCC,IAAA;YAvCD,+BAuCC,CAAA","file":"app/components/graph.component.js","sourcesContent":["import {OnInit} from '@angular/core';\r\nimport {Component, Directive, Attribute, ElementRef} from '@angular/core'; // onChange\r\n//import {Inject} from 'angular2/di';\r\n//import * as d3 from 'd3/index';\r\n\r\n@Directive({\r\n    selector: 'barGraph',\r\n    //lifecycle:  [ OnChange ],\r\n    host: {\r\n        '(change)': 'onChange()'\r\n    },\r\n    properties: ['data']\r\n})\r\nexport class BarGraph {\r\n    data: Array<number>;\r\n    divs: any;\r\n    \r\n    constructor(\r\n        private elementRef: ElementRef,\r\n        @Attribute('width') width: string,\r\n        @Attribute('height') height: string) {\r\n\r\n       console.log(\"hier\");\r\n        var el: any = elementRef.nativeElement;\r\n        //this.elementRef.nativeElement.find('#example');\r\n        \r\n       /*var graph: any = d3.select(el);\r\n       this.divs = graph.\r\n            append('div').\r\n            attr({\r\n                'class': 'chart'\r\n            }).\r\n            style({\r\n                'width': width + 'px',\r\n                'height': height + 'px',\r\n            }).\r\n            selectAll('div');*/\r\n    }\r\n\r\n    render(newValue) {\r\n        if (!newValue) return;\r\n\r\n        this.divs.data(newValue).enter().append('div')\r\n            .transition().ease('elastic')\r\n            .style('width', d => d + '%')\r\n            .text(d => d + '%');\r\n\r\n    }\r\n\r\n    onChange() {\r\n        this.render(this.data);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}