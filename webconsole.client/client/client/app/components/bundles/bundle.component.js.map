{"version":3,"sources":["app/components/bundles/bundle.component.ts"],"names":[],"mappings":"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","file":"app/components/bundles/bundle.component.js","sourcesContent":["import {Component, OnInit, ElementRef} from '@angular/core';\r\nimport {FORM_DIRECTIVES, FormBuilder, NgFor, NgFormModel} from '@angular/common';\r\nimport {ROUTER_DIRECTIVES, Router, ActivatedRoute} from \"@angular/router\";\r\nimport {HTTP_PROVIDERS} from '@angular/http';\r\n\r\nimport {BackendServices} from '../../services/backend.service';\r\nimport {AppGlobals} from '../../services/appglobals.service';\r\nimport {BreadcrumbsService} from '../../services/breadcrumbs.service';\r\n\r\nimport {Bundle} from '../../domain/bundle';\r\nimport {Breadcrumb} from '../navbar/breadcrumb';\r\n\r\nimport {Tabs} from '../../components/tabs';\r\nimport {Tab} from '../../components/tab';\r\nimport {SubTab} from '../../components/subtab';\r\n\r\nimport {KeyValue} from '../../domain/keyValue';\r\nimport {ImportPackage} from '../../domain/importPackage';\r\nimport {Service} from '../../domain/service';\r\nimport {Capability} from '../../domain/capability';\r\nimport {TreeNode} from '../../domain/treenode';\r\nimport {TreeModel} from '../../domain/treemodel';\r\nimport {ExportPackage} from '../../domain/exportPackage';\r\n\r\nimport {NewlinePipe} from '../../pipes/newline.pipe';\r\nimport {ValuesPipe} from '../../pipes/values.pipe';\r\nimport {KeyValuesPipe} from '../../pipes/keyvalues.pipe';\r\nimport {LinkPipe} from '../../pipes/link.pipe';\r\nimport {BundleStatePipe} from '../../pipes/bundleState.pipe';\r\nimport {MaxLengthPipe} from '../../pipes/maxLength.pipe';\r\n\r\nimport {PackagesFilter} from '../../pipes/packagesFilter.pipe'\r\n\r\nimport { TreeComponent } from 'angular2-tree-component';\r\n\r\n@Component({\r\n    selector: 'bundle',\r\n    directives: [FORM_DIRECTIVES, NgFor, NgFormModel, Tabs, Tab, SubTab, TreeComponent],\r\n    providers: [BackendServices, HTTP_PROVIDERS],\r\n    pipes: [NewlinePipe, MaxLengthPipe, ValuesPipe, KeyValuesPipe, BundleStatePipe, LinkPipe,PackagesFilter],\r\n    templateUrl: 'app/html/bundles/bundle.template.html'\r\n})\r\nexport class BundleComponent implements OnInit {\r\n\r\n    bundle: Bundle = new Bundle();\r\n    capabilities: KeyValue[] = [];\r\n    private sub: any;\r\n    wires = [];//new Map<string, Capability[]>();\r\n    public searchName: string = '';\r\n\r\n    exportedPackagesNodes = [];\r\n    \r\n    scrs: KeyValue[] = [];\r\n\r\n    constructor(\r\n        private _backend: BackendServices,\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _breadcrumbsService: BreadcrumbsService,\r\n        private _appGlobals: AppGlobals) {\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.sub = this._route.params.subscribe(params => {\r\n            this._appGlobals.setRouteParams(params);\r\n            let id = params['id'];\r\n            this.wires = [];\r\n\r\n            this._backend.getBundle(id)\r\n                .subscribe(res => {\r\n                    this._appGlobals.setIsLoading(true);\r\n                    this.bundle = res;\r\n                    var props = <Map<string, string>>res.wireDescriptor.capabilities;\r\n                    var providedWires = res.wireDescriptor.providedWires;\r\n                    var oldIdentifier = \"\";\r\n                    var theValue = [];\r\n                    if (providedWires != null) {\r\n                        providedWires.forEach(wire => {\r\n                            var identifier = wire.capability['id']\r\n                            if (oldIdentifier != identifier) {\r\n                                oldIdentifier = identifier;\r\n                                this.wires[identifier] = Array<any>();\r\n                            }\r\n                            this.wires[identifier].push(wire);\r\n                        });\r\n                    }\r\n                    this._backend.getBundleServices(this.bundle.id)\r\n                        .subscribe(serviceRes => {\r\n                            this.bundle.providedServices = serviceRes;\r\n                        });\r\n\r\n                    var treeModel: TreeModel = new TreeModel();\r\n                    this.bundle.exportPackage.forEach(pkg => {\r\n                        console.log(\"handling package \" + pkg.pkgName);\r\n                        this.handlePackage(treeModel, pkg);\r\n                        console.log(\"[\" + treeModel.root.children.toString() + \"]\");\r\n                    });\r\n                    this.exportedPackagesNodes = treeModel.root.children;\r\n                    \r\n                    var props = <Map<string, string>>res.scrMap;\r\n                    for (var key in props) {\r\n                        this.scrs.push(new KeyValue(key, props[key]));\r\n                    };\r\n                    \r\n                    \r\n                    this._appGlobals.setIsLoading(false);\r\n                }\r\n                );\r\n        });\r\n    }\r\n\r\n    handlePackage(model: TreeModel, pkg: ExportPackage) {\r\n        var newNode: TreeNode;\r\n        var id: string = \"\";\r\n        pkg.pkgName.split(\".\").forEach(segment => {\r\n            id = id + \".\" + segment;\r\n            if (id.startsWith(\".\")) {\r\n                id = id.substr(1);\r\n            }\r\n            var parentNode = model.getParent(id);\r\n            var nodeName = segment;\r\n            if (id == pkg.pkgName) {\r\n                nodeName += \" (\" + pkg.version + \")\";\r\n            }\r\n            if (parentNode == null) {\r\n                this.handleSegment(model, model.root, id, nodeName);\r\n            } else {\r\n                this.handleSegment(model, parentNode, id, nodeName);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSegment(model: TreeModel, root: TreeNode, id: string, segment: string) {\r\n        var existingNode: TreeNode = null;\r\n        root.children.forEach(root => {\r\n            if (root.name == segment) {\r\n                existingNode = root;\r\n            }\r\n        });\r\n        if (existingNode == null) {\r\n            root.children.push(new TreeNode(id, segment));\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.sub.unsubscribe();\r\n    }\r\n\r\n\r\n    exportedPackagesTitle() {\r\n        return \"<i class='fa fa-folder-open-o' ></i> <i class='fa fa-caret-right' ></i> <span class='label label-pill label-info'>\" + this.bundle.exportPackage.length + \"</span>\";\r\n    }\r\n\r\n    importedPackagesTitle() {\r\n        return \"<i class='fa fa-folder-open-o' ></i> <i class='fa fa-caret-left' ></i> <span class='label label-pill label-info'>\" + this.bundle.importPackage.length + \"</span>\";\r\n    }\r\n\r\n    providedServicesTitle() {\r\n        var servicesCount = 0;\r\n        if (this.bundle.providedServices != null) {\r\n            servicesCount = this.bundle.providedServices.length;\r\n        }\r\n        return \"<i class='fa fa-play-circle'></i> <i class='fa fa-caret-right'></i> <span class='label label-pill label-info'>\" + servicesCount + \"</span>\";\r\n    }\r\n\r\n    usedServicesTitle() {\r\n        var servicesCount = 0;\r\n        if (this.bundle.servicesInUse != null) {\r\n            servicesCount = this.bundle.servicesInUse.length;\r\n        }\r\n        return \"<i class='fa fa-play-circle'></i> <i class='fa fa-caret-left'></i> <span class='label label-pill label-info'>\" + servicesCount + \"</span>\";\r\n    }\r\n\r\n    reqWiresTitle() {\r\n        return \"<i class='fa fa-plug'></i> <i class='fa fa-caret-left'></i>\";\r\n    }\r\n\r\n    provWiresTitle() {\r\n        return \"<i class='fa fa-plug'></i> <i class='fa fa-caret-right'></i>\";\r\n    }\r\n\r\n    getImportPackageClass(pkg: ImportPackage) {\r\n        if (pkg.packageResolvingCandidates && pkg.packageResolvingCandidates.length == 0 && pkg.resolution == \"MANDATORY\") {\r\n            return \"problem\";\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    onSelectService(service: Service) {\r\n        this._router.navigate(['/services', service.id]);\r\n    }\r\n\r\n    onSelectBundle(id: string) {\r\n        this._router.navigate(['/bundles', id]);\r\n    }\r\n\r\n    showContents(bundle: Bundle) {\r\n        this._router.navigate(['/bundles', bundle.id, 'contents']);\r\n    }\r\n\r\n    onSubmit() {\r\n        console.log(\"submitted\");\r\n    }\r\n\r\n    objToStrMap(obj) {\r\n        let strMap = new Map();\r\n        for (let k of Object.keys(obj)) {\r\n            strMap.set(k, obj[k]);\r\n        }\r\n        return strMap;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}