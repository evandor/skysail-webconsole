{"version":3,"sources":["app/components/bundles/bundles.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA6BA;gBAaI,0BAAoB,MAAc,EAAU,QAAyB,EAAU,kBAAsC;oBAAjG,WAAM,GAAN,MAAM,CAAQ;oBAAU,aAAQ,GAAR,QAAQ,CAAiB;oBAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;oBATrH,cAAS,GAAG,IAAI,CAAC;oBAEjB,aAAQ,GAAW,EAAE,CAAC;oBACtB,eAAU,GAAW,EAAE,CAAC;oBAGxB,YAAO,GAAW,CAAC,CAAC;gBAGoG,CAAC;gBAEzH,mCAAQ,GAAR,UAAS,MAAc;oBACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9C,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,uBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;gBACpE,CAAC;gBAED,mCAAQ,GAAR;oBAAA,iBAaC;oBAZG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;yBACrB,SAAS,CAAC,UAAA,GAAG;wBACV,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;wBACnB,CAAA,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAlB,CAAkB,EAAC;wBAC1B,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM;4BACvB,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gCAC7B,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;4BAC/B,CAAC;wBACL,CAAC,CAAC,CAAC;wBACH,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;oBACzB,CAAC,CAAC,CAAC;gBACX,CAAC;gBAED,mCAAQ,GAAR,UAAS,GAAG;oBACR,OAAO,CAAC,KAAK,CAAC,sBAAsB,GAAG,GAAG,CAAC,CAAC;gBAChD,CAAC;gBAED,gDAAqB,GAArB,UAAsB,EAAU;oBAC5B,MAAM,CAAC,cAAc,GAAG,EAAE,CAAC;gBAC/B,CAAC;gBAED,kCAAO,GAAP,UAAQ,KAAK,EAAE,GAAG,EAAE,IAAI;oBACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;oBACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACrB,CAAC;gBAvDL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,SAAS;wBACnB,UAAU,EAAE,CAAC,wBAAe,EAAE,0BAAiB,EAAE,cAAK,EAAE,oBAAW,EAAE,WAAI,EAAE,SAAG,EAAE,wCAAkB,EAAC,6CAAmB,CAAC;wBACvH,SAAS,EAAE,CAAC,iCAAe,EAAE,wCAAkB,CAAC;wBAChD,WAAW,EAAE,wCAAwC;wBACrD,KAAK,EAAE,CAAC,kCAAa,EAAE,kCAAe,CAAC;qBAE1C,CAAC;;oCAAA;gBAkDF,uBAAC;YAAD,CAjDA,AAiDC,IAAA;YAjDD,+CAiDC,CAAA","file":"app/components/bundles/bundles.component.js","sourcesContent":["import {Component, OnInit, ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {FORM_DIRECTIVES, FormBuilder, NgFor, NgFormModel} from '@angular/common';\nimport {ROUTER_DIRECTIVES, Router} from \"@angular/router\";\n\nimport {BackendServices} from '../../services/backend.service';\nimport {BreadcrumbsService} from '../../services/breadcrumbs.service';\nimport {Breadcrumb} from '../../components/navbar/breadcrumb';\nimport {Bundle} from '../../domain/bundle';\nimport {Tabs} from '../../components/tabs';\nimport {Tab} from '../../components/tab';\n\nimport {BundleStatePipe} from '../../pipes/bundleState.pipe';\nimport {BundlesFilter} from '../../pipes/bundlesFilter.pipe'\n\nimport {PercentBarDirective} from '../../directives/percentBar.d3.directive'\nimport {AdjacencyDirective} from '../../directives/adjacency.directive'\n\n//import {OrderByPipe} from 'fuel-ui/fuel-ui';\n\ndeclare var jQuery: any;\n\n@Component({\n    selector: 'bundles',\n    directives: [FORM_DIRECTIVES, ROUTER_DIRECTIVES, NgFor, NgFormModel, Tabs, Tab, AdjacencyDirective,PercentBarDirective],\n    providers: [BackendServices, BreadcrumbsService],\n    templateUrl: 'app/html/bundles/bundles.template.html',\n    pipes: [BundlesFilter, BundleStatePipe],\n    //changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BundlesComponent implements OnInit {\n\n    bundles: Bundle[];\n    \n    isLoading = true;\n\n    searchId: string = \"\";\n    searchName: string = '';\n    \n    value: number;\n    maxSize: number = 0;\n    size: number;\n\n    constructor(private router: Router, private _backend: BackendServices, private _breadcrumbService: BreadcrumbsService) {}\n\n    onSelect(bundle: Bundle) {\n        this.router.navigate(['/bundles', bundle.id]);\n        this._breadcrumbService.add(new Breadcrumb(['bundle'], \"hier\"));\n    }\n\n    ngOnInit() {\n        this._backend.getBundles()\n            .subscribe(res => {\n                console.log(\"got bundles\");\n                this.bundles = res;\n                err => this.logError(err);\n                this.bundles.forEach(bundle => {\n                    if (bundle.size > this.maxSize) {\n                        this.maxSize = bundle.size;\n                    }\n                });\n                this.isLoading=false;\n            });\n    }\n\n    logError(err) {\n        console.error('There was an error: ' + err);\n    }\n\n    getPercentChartSpanId(id: string) {\n        return \"chartSpanId_\" + id;\n    }\n    \n    setData(value, max, size) {\n        this.value = value;\n        this.maxSize = max;\n        this.size = size;\n    }\n\n}\n"],"sourceRoot":"/source/"}