{"version":3,"sources":["app/components/services/service.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAqBA;gBAOI,0BAAoB,MAAc,EAAU,YAAwB,EAAU,QAAyB;oBAAnF,WAAM,GAAN,MAAM,CAAQ;oBAAU,iBAAY,GAAZ,YAAY,CAAY;oBAAU,aAAQ,GAAR,QAAQ,CAAiB;oBALvG,cAAS,GAAG,IAAI,CAAC;oBACjB,YAAO,GAAY,IAAI,iBAAO,EAAE,CAAC;oBACjC,eAAU,GAAe,EAAE,CAAC;oBAC5B,iBAAY,GAAa,EAAE,CAAC;oBAGvB,QAAQ,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;gBACnD,CAAC;gBAED,mCAAQ,GAAR,UAAS,MAAc;oBACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAG,CAAC;gBAC3D,CAAC;gBAED,mCAAQ,GAAR;oBAAA,iBAcC;oBAbG,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAErC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;yBACvB,SAAS,CAAC,UAAA,GAAG;wBACV,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;wBACnB,IAAI,KAAK,GAAuB,GAAG,CAAC,UAAU,CAAC;wBAC/C,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;4BACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,mBAAQ,CAAC,GAAG,EAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACvD,CAAC;wBAAA,CAAC;wBACF,KAAI,CAAC,YAAY,GAAa,GAAG,CAAC,YAAY,CAAC;wBAC/C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBAC3B,CAAC,CACJ,CAAC;gBACN,CAAC;gBApCL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,SAAS;wBACnB,UAAU,EAAE,CAAC,wBAAe,EAAE,cAAK,EAAE,oBAAW,EAAC,WAAI,EAAE,SAAG,CAAC;wBAC3D,KAAK,EAAE,CAAC,oBAAQ,CAAC;wBACjB,SAAS,EAAE,CAAC,iCAAe,EAAE,qBAAc,CAAC;wBAC5C,WAAW,EAAE,yCAAyC;qBACzD,CAAC;;oCAAA;gBA+BF,uBAAC;YAAD,CA9BA,AA8BC,IAAA;YA9BD,+CA8BC,CAAA","file":"app/components/services/service.component.js","sourcesContent":["import {Component, OnInit,ElementRef} from '@angular/core';\nimport {FORM_DIRECTIVES, FormBuilder, NgFor, NgFormModel} from '@angular/common';\nimport {HTTP_PROVIDERS} from '@angular/http';\nimport {ROUTER_DIRECTIVES, RouteParams, Router} from \"@angular/router-deprecated\";\n\nimport {BackendServices} from '../../services/backend.service';\nimport {Bundle} from '../../domain/bundle';\nimport {KeyValue} from '../../domain/keyValue';\nimport {Service} from '../../domain/service';\nimport {Tabs} from '../../components/tabs';\nimport {Tab} from '../../components/tab';\n\nimport {DerpPipe} from '../../pipes/derp.pipe';\n\n@Component({\n    selector: 'service',\n    directives: [FORM_DIRECTIVES, NgFor, NgFormModel,Tabs, Tab],\n    pipes: [DerpPipe],\n    providers: [BackendServices, HTTP_PROVIDERS],\n    templateUrl: 'app/html/services/service.template.html'\n})\nexport class ServiceComponent implements OnInit {\n\n    isLoading = true;\n    service: Service = new Service();\n    properties: KeyValue[] = [];\n    usingBundles: Bundle[] = [];\n\n    constructor(private router: Router, private _routeParams:RouteParams, private _backend: BackendServices) {\n         _backend.setBaseUrl('http://localhost:2002/');\n    }\n\n    onSelect(bundle: Bundle) {\n        this.router.navigate( ['Bundle', { id: bundle.id }]  );\n    }\n    \n    ngOnInit() {\n        let id = this._routeParams.get('id');\n        \n        this._backend.getService(id)\n            .subscribe(res => {\n                this.service = res;\n                var props = <Map<string,string>>res.properties;\n                for (var key in props) {\n                    this.properties.push(new KeyValue(key,props[key]));\n                };\n                this.usingBundles = <Bundle[]>res.usingBundles;\n                this.isLoading = false;\n            }\n        );\n    }\n}\n"],"sourceRoot":"/source/"}