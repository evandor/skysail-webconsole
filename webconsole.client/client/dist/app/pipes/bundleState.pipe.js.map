{"version":3,"sources":["app/pipes/bundleState.pipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAQA;gBAAA;gBAoBA,CAAC;gBAnBG,mCAAS,GAAT,UAAU,WAAmB;oBACzB,EAAE,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC,kBAAkB,CAAC;oBAC9B,CAAC;oBACD,MAAM,CAAC,eAAe,GAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAC,IAAI,GAAG,WAAW,GAAG,SAAS,CAAC;gBAC1F,CAAC;gBAED,uCAAa,GAAb,UAAc,KAAa;oBACvB,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACZ,KAAK,QAAQ;4BACT,MAAM,CAAC,qBAAqB,CAAC;wBACjC,KAAK,WAAW;4BACZ,MAAM,CAAC,qBAAqB,CAAC;wBACjC;4BACI,MAAM,CAAC,oBAAoB,CAAC;oBACpC,CAAC;gBACL,CAAC;gBArBL;oBAAC,WAAI,CAAC;wBACF,IAAI,EAAE,aAAa;qBACtB,CAAC;oBACD,iBAAU,EAAE;;mCAAA;gBAqBb,sBAAC;YAAD,CApBA,AAoBC,IAAA;YApBD,6CAoBC,CAAA","file":"app/pipes/bundleState.pipe.js","sourcesContent":["import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\n\r\nimport {Bundle} from '../domain/bundle';\r\n\r\n@Pipe({\r\n    name: 'bundleState'\r\n})\r\n@Injectable()\r\nexport class BundleStatePipe implements PipeTransform {\r\n    transform(bundleState: string): any {\r\n        if (bundleState == null) {\r\n            return \"<span>***</span>\";\r\n        }\r\n        return \"<span class='\"+this.getStateClass(bundleState)+\"'>\" + bundleState + \"</span>\";\r\n    }\r\n\r\n    getStateClass(state: string) {\r\n        switch (state) {\r\n            case \"ACTIVE\":\r\n                return \"label label-success\";\r\n            case \"INSTALLED\":\r\n                return \"label label-warning\";\r\n            default:\r\n                return \"label label-danger\";\r\n        }\r\n    }\r\n\r\n\r\n}"],"sourceRoot":"/source/"}