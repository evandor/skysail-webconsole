{"version":3,"sources":["app/components/config.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAaA;gBAQI,yBAAoB,QAAyB;oBAAzB,aAAQ,GAAR,QAAQ,CAAiB;oBAJ7C,UAAK,GAAG,IAAI,6BAAa,CAAC,SAAS,EAAE,MAAM,EAAE,uBAAuB,CAAC,CAAC;oBACtE,cAAS,GAAG,KAAK,CAAC;oBAalB,oEAAoE;oBACpE,kDAAkD;oBAClD,4CAA4C;oBAC5C,2DAA2D;oBAC3D,WAAM,GAAG,IAAI,CAAC;gBAdkC,CAAC;gBAFjD,kCAAQ,GAAR,cAAa,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;gBAIrC,kCAAQ,GAAR;oBAAA,iBAGC;oBAFO,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;yBACzB,SAAS,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,OAAO,GAAG,GAAG,EAAlB,CAAkB,CAAC,CAAC;gBAC9C,CAAC;gBAGD,sBAAI,uCAAU;oBADd,oCAAoC;yBACpC,cAAmB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;mBAAA;gBAQvD,0CAAgB,GAAhB,UAAiB,IAAY;oBAEzB,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;gBAChF,CAAC;gBAhCL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,QAAQ;wBAClB,SAAS,EAAE,CAAC,iCAAe,CAAC;wBAC5B,WAAW,EAAE,+BAA+B;qBAC/C,CAAC;;mCAAA;gBA6BF,sBAAC;YAAD,CA5BA,AA4BC,IAAA;YA5BD,6CA4BC,CAAA","file":"app/components/config.component.js","sourcesContent":["import {Component, OnInit, ElementRef, ChangeDetectionStrategy, OnChanges, Input, Output, EventEmitter} from '@angular/core';\r\nimport {FORM_DIRECTIVES, FormBuilder, NgFor, NgFormModel, NgForm} from '@angular/common';\r\nimport {ROUTER_DIRECTIVES, Router} from \"@angular/router\";\r\n\r\nimport {BackendServices} from '../services/backend.service';\r\n\r\nimport {BackendConfig} from '../domain/backendconfig';\r\n\r\n@Component({\r\n    selector: 'config',\r\n    providers: [BackendServices],\r\n    templateUrl: 'app/html/config.template.html'\r\n})\r\nexport class ConfigComponent {\r\n\r\n    version: string;\r\n\r\n    model = new BackendConfig('evandor', 'none', 'http://localhost:8080');\r\n    submitted = false;\r\n    onSubmit() { this.submitted = true; }\r\n\r\n    constructor(private _backend: BackendServices) {}\r\n\r\n    ngOnInit() {\r\n            this._backend.getVersion()\r\n            .subscribe(res => this.version = res);\r\n    }\r\n\r\n    // TODO: Remove this when we're done\r\n    get diagnostic() { return JSON.stringify(this.model); }\r\n\r\n    // Reset the form with a new hero AND restore 'pristine' class state\r\n    // by toggling 'active' flag which causes the form\r\n    // to be removed/re-added in a tick via NgIf\r\n    // TODO: Workaround until NgForm has a reset method (#6822)\r\n    active = true;\r\n\r\n    showFormControls(form: NgForm) {\r\n\r\n        return form && form.controls['endpoint'] && form.controls['endpoint'].value;\r\n    }\r\n}"],"sourceRoot":"/source/"}