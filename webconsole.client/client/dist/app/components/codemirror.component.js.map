{"version":3,"sources":["app/components/codemirror.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAUA;gBAUI,6BAAY,KAAgB,EAChB,QAAyB,EACzB,MAAsB;oBADtB,aAAQ,GAAR,QAAQ,CAAiB;oBACzB,WAAM,GAAN,MAAM,CAAgB;oBARlC,SAAI,GAAW,KAAK,CAAC;oBASjB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,aAAa,CAAC;gBACnD,CAAC;gBAED,sCAAQ,GAAR;oBAAA,iBAWC;oBATG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;wBAC1C,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;wBACtB,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;wBAE9B,KAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE,EAAE,QAAQ,CAAC;6BAC5C,SAAS,CAAC,UAAA,GAAG;4BACV,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBACnC,CAAC,CAAC,CAAC;oBACX,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,6CAAe,GAAf;oBAAA,iBAYC;oBAXE,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,mBAAmB,EAAE;wBAChD,WAAW,EAAE,IAAI;wBACjB,IAAI,EAAC,aAAa;wBAClB,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;oBAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,MAAwB;wBAC9C,IAAI,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC;wBAC5C,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;oBAClC,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACvC,CAAC;gBAED,yCAAW,GAAX,UAAY,OAAU;oBAClB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC9B,CAAC;gBAED,0CAAY,GAAZ,UAAa,MAAa;oBACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACzB,CAAC;gBAtDL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,YAAY;wBACtB,SAAS,EAAE,CAAC,iCAAe,CAAC;wBAC5B,WAAW,EAAE,mCAAmC;qBACnD,CAAC;;uCAAA;gBAmDF,0BAAC;YAAD,CAlDA,AAkDC,IAAA;YAlDD,qDAkDC,CAAA","file":"codemirror.component.js","sourcesContent":["import {Component, OnInit, ElementRef, OnChanges, AfterViewInit} from \"@angular/core\";\nimport {ROUTER_DIRECTIVES, Router, ActivatedRoute} from \"@angular/router\";\n\nimport {BackendServices} from '../services/backend.service';\n\n@Component({\n    selector: 'codemirror',\n    providers: [BackendServices],\n    templateUrl: \"app/html/codemirror.template.html\"\n})\nexport class CodeMirrorComponent implements OnInit,OnChanges, AfterViewInit {\n\n    sub: any;\n\n    text: string = \"...\";\n\n    height:number;\n    editor:any;\n    editorNativeElement:any;\n\n    constructor(elRef:ElementRef, \n        private _backend: BackendServices, \n        private _route: ActivatedRoute) {\n        this.editorNativeElement = elRef.nativeElement;\n    }\n\n    ngOnInit() {\n\n        this.sub = this._route.params.subscribe(params => {\n            let id = params['id'];\n            let filename = params['file'];\n\n            this._backend.getBundleFileContents(id, filename)\n                .subscribe(res => {\n                    this.editor.setValue(res.code);\n                });\n        });\n    }\n\n    ngAfterViewInit() {\n       this.editor = CodeMirror(this.editorNativeElement, {\n          lineNumbers: true,\n          mode:\"text/x-java\",\n          readOnly: true\n        });\n\n        this.editor.on('change', (editor:CodeMirror.Editor) => {\n            var value = this.editor.getDoc().getValue();\n            console.log(\"Value changed!\");\n        });\n        this.editor.setSize(\"100%\", \"80%\");\n    }\n\n    ngOnChanges(changes:{}) {\n        console.log(\"on changes\");\n    }\n\n    updateHeight(height:number) {\n        this.height = height;\n    }\n}"]}