{"version":3,"sources":["app/components/services/service.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAuBA;gBAMI,0BAAoB,MAAc,EAAU,KAAqB,EAAU,QAAyB,EAAU,WAAuB;oBAAjH,WAAM,GAAN,MAAM,CAAQ;oBAAU,UAAK,GAAL,KAAK,CAAgB;oBAAU,aAAQ,GAAR,QAAQ,CAAiB;oBAAU,gBAAW,GAAX,WAAW,CAAY;oBAJrI,YAAO,GAAY,IAAI,iBAAO,EAAE,CAAC;oBACjC,eAAU,GAAe,EAAE,CAAC;oBAC5B,iBAAY,GAAa,EAAE,CAAC;gBAG5B,CAAC;gBAED,mCAAQ,GAAR,UAAS,QAAgB;oBACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;gBACjD,CAAC;gBAED,mCAAQ,GAAR;oBAAA,iBAkBC;oBAjBG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;wBAC9B,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;wBACtB,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;6BACvB,SAAS,CAAC,UAAA,GAAG;4BACV,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;4BAEpC,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;4BACnB,IAAI,KAAK,GAAwB,GAAG,CAAC,UAAU,CAAC;4BAChD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;gCACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,mBAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BACxD,CAAC;4BAAA,CAAC;4BACF,KAAI,CAAC,YAAY,GAAa,GAAG,CAAC,YAAY,CAAC;4BAC/C,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;wBACzC,CAAC,CACA,CAAC;oBACV,CAAC,CAAC,CAAC;gBAEP,CAAC;gBAtCL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,SAAS;wBACnB,UAAU,EAAE,CAAC,wBAAe,EAAE,cAAK,EAAE,oBAAW,EAAE,WAAI,EAAE,SAAG,CAAC;wBAC5D,KAAK,EAAE,CAAC,oBAAQ,CAAC;wBACjB,SAAS,EAAE,CAAC,iCAAe,EAAE,qBAAc,CAAC;wBAC5C,WAAW,EAAE,yCAAyC;qBACzD,CAAC;;oCAAA;gBAiCF,uBAAC;YAAD,CAhCA,AAgCC,IAAA;YAhCD,+CAgCC,CAAA","file":"app/components/services/service.component.js","sourcesContent":["import {Component, OnInit, ElementRef} from '@angular/core';\r\nimport {FORM_DIRECTIVES, FormBuilder, NgFor, NgFormModel} from '@angular/common';\r\nimport {HTTP_PROVIDERS} from '@angular/http';\r\nimport {ROUTER_DIRECTIVES, Router, ActivatedRoute} from \"@angular/router\";\r\n\r\nimport {BackendServices} from '../../services/backend.service';\r\nimport {AppGlobals} from '../../services/appglobals.service';\r\n\r\nimport {Bundle} from '../../domain/bundle';\r\nimport {KeyValue} from '../../domain/keyValue';\r\nimport {Service} from '../../domain/service';\r\nimport {Tabs} from '../../components/tabs';\r\nimport {Tab} from '../../components/tab';\r\n\r\nimport {DerpPipe} from '../../pipes/derp.pipe';\r\n\r\n@Component({\r\n    selector: 'service',\r\n    directives: [FORM_DIRECTIVES, NgFor, NgFormModel, Tabs, Tab],\r\n    pipes: [DerpPipe],\r\n    providers: [BackendServices, HTTP_PROVIDERS],\r\n    templateUrl: 'app/html/services/service.template.html'\r\n})\r\nexport class ServiceComponent implements OnInit {\r\n\r\n    service: Service = new Service();\r\n    properties: KeyValue[] = [];\r\n    usingBundles: Bundle[] = [];\r\n\r\n    constructor(private router: Router, private route: ActivatedRoute, private _backend: BackendServices, private _appGlobals: AppGlobals) {\r\n    }\r\n\r\n    onSelect(bundleId: string) {\r\n        this.router.navigate(['/bundles', bundleId]);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            let id = params['id'];\r\n            this._backend.getService(id)\r\n                .subscribe(res => {\r\n                    this._appGlobals.setIsLoading(true);\r\n\r\n                    this.service = res;\r\n                    var props = <Map<string, string>>res.properties;\r\n                    for (var key in props) {\r\n                        this.properties.push(new KeyValue(key, props[key]));\r\n                    };\r\n                    this.usingBundles = <Bundle[]>res.usingBundles;\r\n                    this._appGlobals.setIsLoading(false);\r\n                }\r\n                );\r\n        });\r\n\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}