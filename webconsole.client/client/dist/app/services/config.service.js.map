{"version":3,"sources":["app/services/config.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAKA;gBAKI,uBAAoB,OAAqB,EAAU,IAAS;oBAAxC,YAAO,GAAP,OAAO,CAAc;oBAAU,SAAI,GAAJ,IAAI,CAAK;oBAH5D,SAAI,GAAU,QAAQ,CAAC,QAAQ,CAAC;oBAChC,SAAI,GAAU,MAAM,CAAC;oBAGjB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;oBAC9B,sDAAsD;oBACtD;;;;;4BAKQ;gBACZ,CAAC;gBAfL;oBAAC,iBAAU,EAAE;;iCAAA;gBAkBb,oBAAC;YAAD,CAjBA,AAiBC,IAAA;YAjBD,yCAiBC,CAAA","file":"app/services/config.service.js","sourcesContent":["import {Injectable, EventEmitter} from \"@angular/core\";\r\nimport {WindowService} from './window.service';\r\nimport {Http, Headers} from '@angular/http'\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n\r\n    host:string = location.hostname;\r\n    port:string = \"2002\";\r\n\r\n    constructor(private windows:WindowService, private http:Http) {\r\n        this.host = location.hostname;\r\n        // does not make sense to define host and port here...\r\n        /*http.get('config.json')\r\n            .map(res => res.json())\r\n            .subscribe((config:any) => {\r\n                this.host = config.host;\r\n                this.port = config.port;\r\n            })*/\r\n    }\r\n\r\n\r\n}\r\n\r\n"],"sourceRoot":"/source/"}